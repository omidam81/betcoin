description "Docker Container"

stop on stopping docker
# Docker has a timeout of 10 seconds so as long as this
# is longer so we don't kill the wait process
kill timeout 30

respawn

instance ${NAME}

pre-start script
[ ! -f /etc/docker/containers ] && { stop; exit 0; }
CIDFILE="/var/run/docker/${NAME}.cid" 
[ -f "${CIDFILE}" ] && { echo "existing container id file at ${CIDFILE}"; stop; exit 0; }

if ! grep -q "^${NAME}:" /etc/docker/containers; then
    stop
    exit 0
fi
end script

script
RUNCMD=$(grep "^${NAME}:" /etc/docker/containers | cut -d: -f2-| sed 's/^\s*//')
CIDFILE="/var/run/docker/${NAME}.cid" 

echo "${NAME}: ${RUNCMD}"
[ -f "${CIDFILE}" ] && { ID="$(cat ${CIDFILE})"; }
START=1
if [ ! -z "${ID}" ]; then
    if docker ps | grep -q "${ID}"; then
        START=0
    else
        NID=$(docker start ${ID})
        [ "${NID}" = "${ID}" ] && START=0
    fi
fi

if [ $START -ne 0 ]; then
    ID=$(docker run -d --name "${NAME}" ${RUNCMD})
    echo ${ID} > ${CIDFILE}
fi

exec docker attach ${ID}
end script

pre-stop script
CIDFILE="/var/run/docker/${NAME}.cid" 
[ -f "${CIDFILE}" ] && { ID="$(cat ${CIDFILE})"; }
if [ ! -z "${ID}" ]; then
    docker stop "${NAME}" && docker rm "${NAME}" && rm ${CIDFILE}
fi
end script
