'use strict';

/* global describe */
/* global it */
/* global before */

var argv = require('yargs')
    .default({'log-level': 'silent', 'test': 'all'})
    .check(function(argv) {
        return typeof argv.logLevel === 'string';
    })
    .argv;
var fs = require('fs');
var request = require('supertest')('http://localhost:8443');
var container = require('../src/container');
// override the model storage to use a test database
container.register('userModelStore', function(mongo) {
    var store = mongo.getModella({dbname: 'userdb_test'});
    store.ensureObjectId = mongo.ensureObjectId;
    return store;
});
container.register('gameModelStore', function(mongo) {
    var store = mongo.getModella({dbname: 'gamedb_test'});
    store.objectId = mongo.objectId;
    return store;
});

// override the logger
// change the level to see logs while testing
container.register('logger', function(gameNames) {
    return require('../src/lib/logger')({
        games: gameNames,
        level: argv.logLevel
    });
});

// get the app and set it's container
var Api = require('../src/app');
var api = new Api(container);


// globals to be available in the required test modules
global.USERNAME_SEED = 10000000000000000000;
global.getUsername = function() {
    var username = global.USERNAME_SEED.toString(36);
    global.USERNAME_SEED += 1000000000;
    return username;
};

// addresses to test with, these were generated by atticus, so
// anything sent to them will go to his dev wallet
// the message that was signed is 'foo'
global.ADDRESSES = require('./mock/addresses');

// register the container globally so the required modules can get the things they need
global.container = container;
global.request = request;


describe('API', function() {
    before(function(done) { api.init(8443, done); });
    it('should start up', function(done) {
        request.get('/ping').expect(200, 'pong', done);
    });

    if (argv.test === 'all') {
        // wallet COIN is bitcoin always
        require('./controllers/wallet')();
        var games = fs.readdirSync(__dirname + '/../src/games');
        var CURRENCIES = container.get('CURRENCIES');
        games.forEach(function(game, index) {
            require('./games/' + game)(CURRENCIES[index % CURRENCIES.length]);
        });
        // run the user test last, something about how it is set up
        // makes the tests fail if it's run first
        require('./controllers/user')('bitcoin');
        require('./controllers/notification')('litecoin');
    } else {
        require('./' + argv.test)('bitcoin');
    }
});
